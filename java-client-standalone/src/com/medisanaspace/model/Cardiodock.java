package com.medisanaspace.model;

import com.medisanaspace.library.RandomHelper;
import com.medisanaspace.model.base.BaseModelWithoutMeal;
import flexjson.JSONDeserializer;
import flexjson.JSONSerializer;
import java.util.ArrayList;
import java.util.Collection;
import java.util.List;

public class Cardiodock extends BaseModelWithoutMeal {

	public static final int MIN_SYSTOLE = 90;

	public static final int MAX_SYSTOLE = 140;

	public static final int MIN_DIASTOLE = 60;

	public static final int MAX_DIASTOLE = 100;

	public static final int MIN_PULSE = 50;

	public static final int MAX_PULSE = 150;

	public static final int MIN_SYSTOLE_TARGET_MIN = 90;

	public static final int MAX_SYSTOLE_TARGET_MIN = 140;

	public static final int MIN_SYSTOLE_TARGET_MAX = 0;

	public static final int MAX_SYSTOLE_TARGET_MAX = 300;

	public static final int MIN_DIASTOLE_TARGET_MIN = 60;

	public static final int MAX_DIASTOLE_TARGET_MIN = 90;

	public static final int MIN_DIASTOLE_TARGET_MAX = 0;

	public static final int MAX_DIASTOLE_TARGET_MAX = 300;

	public static final int MIN_PULSE_TARGET_MIN = 60;

	public static final int MAX_PULSE_TARGET_MIN = 90;

	public static final int MIN_PULSE_TARGET_MAX = 40;

	public static final int MAX_PULSE_TARGET_MAX = 200;

	public static final int MIN_TYPE = 0;

	public static final int MAX_TYPE = 1;

	public static final int MIN_ARRHYTHMIC = 0;

	public static final int MAX_ARRHYTHMIC = 1;

	private Integer systole;
	private Integer diastole;
	private Integer pulse;
	private Integer systoleTargetMin;
	private Integer systoleTargetMax;
	private Integer diastoleTargetMin;
	private Integer diastoleTargetMax;
	private Integer pulseTargetMin;
	private Integer pulseTargetMax;
	private Integer type;
	private Integer arrhythmic;
	private String moduleSerialId;

	public static final Cardiodock generateRandomEntry() {
		final Cardiodock cardiodock = new Cardiodock();
		cardiodock.setSystoleTargetMin(RandomHelper.generateInt(
				MIN_SYSTOLE_TARGET_MIN, MAX_SYSTOLE_TARGET_MIN));
		cardiodock.setSystoleTargetMax(RandomHelper.generateInt(
				MIN_SYSTOLE_TARGET_MAX, MAX_SYSTOLE_TARGET_MAX));
		cardiodock.setDiastoleTargetMin(RandomHelper.generateInt(
				MIN_DIASTOLE_TARGET_MIN, MAX_DIASTOLE_TARGET_MIN));
		cardiodock.setDiastoleTargetMax(RandomHelper.generateInt(
				MIN_DIASTOLE_TARGET_MAX, MAX_DIASTOLE_TARGET_MAX));
		cardiodock.setPulseTargetMin(RandomHelper.generateInt(
				MIN_PULSE_TARGET_MIN, MAX_PULSE_TARGET_MIN));
		cardiodock.setPulseTargetMax(RandomHelper.generateInt(
				MIN_PULSE_TARGET_MAX, MAX_PULSE_TARGET_MAX));
		cardiodock.setActivityStatus(RandomHelper.generateInt(
				MIN_ACTIVITY_STATUS, MAX_ACTIVITY_STATUS));
		cardiodock.setMood(RandomHelper.generateInt(MIN_MOOD, MAX_MOOD));
		cardiodock.setNote("[Autogenerated item]");
		cardiodock.setSystole(RandomHelper
				.generateInt(MIN_SYSTOLE, MAX_SYSTOLE));
		cardiodock.setDiastole(RandomHelper.generateInt(MIN_DIASTOLE,
				MAX_DIASTOLE));
		cardiodock.setPulse(RandomHelper.generateInt(MIN_PULSE, MAX_PULSE));
		cardiodock.setModuleSerialId("[Autogenerated item]");
		cardiodock.setType(RandomHelper.generateInt(MIN_TYPE, MAX_TYPE));
		cardiodock.setArrhythmic(RandomHelper.generateInt(MIN_ARRHYTHMIC,
				MAX_ARRHYTHMIC));
		return cardiodock;
	}

	public final String toJson() {
		return new JSONSerializer().exclude("*.class").serialize(this);
	}

	public static final Cardiodock fromJsonToCardiodock(final String json) {
		return new JSONDeserializer<Cardiodock>().use(null, Cardiodock.class)
				.deserialize(json);
	}

	public static final String toJsonArray(
			final Collection<Cardiodock> collection) {
		return new JSONSerializer().exclude("*.class").exclude("active")
				.exclude("updatedDate").exclude("version").exclude("id")
				.serialize(collection);
	}

	public static final Collection<Cardiodock> fromJsonArrayToCardiodocks(
			final String json) {
		return new JSONDeserializer<List<Cardiodock>>()
				.use(null, ArrayList.class).use("values", Cardiodock.class)
				.deserialize(json);
	}

	public final Integer getSystole() {
		return this.systole;
	}

	public void setSystole(final Integer systole) {
		this.systole = systole;
	}

	public final Integer getDiastole() {
		return this.diastole;
	}

	public void setDiastole(final Integer diastole) {
		this.diastole = diastole;
	}

	public final Integer getPulse() {
		return this.pulse;
	}

	public void setPulse(final Integer pulse) {
		this.pulse = pulse;
	}

	public final Integer getSystoleTargetMin() {
		return this.systoleTargetMin;
	}

	public void setSystoleTargetMin(final Integer systoleTargetMin) {
		this.systoleTargetMin = systoleTargetMin;
	}

	public final Integer getSystoleTargetMax() {
		return this.systoleTargetMax;
	}

	public void setSystoleTargetMax(final Integer systoleTargetMax) {
		this.systoleTargetMax = systoleTargetMax;
	}

	public final Integer getDiastoleTargetMin() {
		return this.diastoleTargetMin;
	}

	public void setDiastoleTargetMin(final Integer diastoleTargetMin) {
		this.diastoleTargetMin = diastoleTargetMin;
	}

	public final Integer getDiastoleTargetMax() {
		return this.diastoleTargetMax;
	}

	public void setDiastoleTargetMax(final Integer diastoleTargetMax) {
		this.diastoleTargetMax = diastoleTargetMax;
	}

	public final Integer getPulseTargetMin() {
		return this.pulseTargetMin;
	}

	public void setPulseTargetMin(final Integer pulseTargetMin) {
		this.pulseTargetMin = pulseTargetMin;
	}

	public final Integer getPulseTargetMax() {
		return this.pulseTargetMax;
	}

	public void setPulseTargetMax(final Integer pulseTargetMax) {
		this.pulseTargetMax = pulseTargetMax;
	}

	public final Integer getType() {
		return this.type;
	}

	public void setType(final Integer type) {
		this.type = type;
	}

	public final Integer getArrhythmic() {
		return this.arrhythmic;
	}

	public void setArrhythmic(final Integer arrhythmic) {
		this.arrhythmic = arrhythmic;
	}

	public final String getModuleSerialId() {
		return this.moduleSerialId;
	}

	public void setModuleSerialId(final String moduleSerialId) {
		this.moduleSerialId = moduleSerialId;
	}
}
