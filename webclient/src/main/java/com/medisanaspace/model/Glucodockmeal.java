package com.medisanaspace.model;

import com.medisanaspace.library.RandomHelper;
import com.medisanaspace.model.base.Versionable;

import flexjson.JSONDeserializer;
import flexjson.JSONSerializer;
import java.util.ArrayList;
import java.util.Collection;
import java.util.List;

/**
 */
public class Glucodockmeal extends Versionable {

	public static final int MIN_CARBOHYDRATES = 80;

	public static final int MAX_CARBOHYDRATES = 230;

	private Integer carbohydrates;
	private String moduleSerialId;

	/**
	 * Method generateRandomEntry.
	 * @return Glucodockmeal
	 */
	public static final Glucodockmeal generateRandomEntry() {
		final Glucodockmeal glucodockmeal = new Glucodockmeal();
		glucodockmeal.setCarbohydrates(RandomHelper.generateInt(
				MIN_CARBOHYDRATES, MAX_CARBOHYDRATES));
		glucodockmeal.setModuleSerialId("[Autogenerated item]");
		return glucodockmeal;
	}

	/**
	 * Method getModuleSerialId.
	 * @return String
	 */
	public final String getModuleSerialId() {
		return this.moduleSerialId;
	}

	/**
	 * Method setModuleSerialId.
	 * @param moduleSerialId String
	 */
	public void setModuleSerialId(final String moduleSerialId) {
		this.moduleSerialId = moduleSerialId;
	}

	/**
	 * Method getCarbohydrates.
	 * @return Integer
	 */
	public final Integer getCarbohydrates() {
		return this.carbohydrates;
	}

	/**
	 * Method setCarbohydrates.
	 * @param carbohydrates Integer
	 */
	public void setCarbohydrates(final Integer carbohydrates) {
		this.carbohydrates = carbohydrates;
	}

	/**
	 * Method toJson.
	 * @return String
	 */
	public final String toJson() {
		return new JSONSerializer().exclude("*.class").serialize(this);
	}

	/**
	 * Method fromJsonToGlucodockmeal.
	 * @param json String
	 * @return Glucodockmeal
	 */
	public static final Glucodockmeal fromJsonToGlucodockmeal(final String json) {
		return new JSONDeserializer<Glucodockmeal>().use(null,
				Glucodockmeal.class).deserialize(json);
	}

	/**
	 * Method toJsonArray.
	 * @param collection Collection<Glucodockmeal>
	 * @return String
	 */
	public static final String toJsonArray(
			final Collection<Glucodockmeal> collection) {
		return new JSONSerializer().exclude("*.class").exclude("active")
				.exclude("updatedDate").exclude("version").exclude("id")
				.serialize(collection);
	}

	/**
	 * Method fromJsonArrayToGlucodockmeals.
	 * @param json String
	 * @return Collection<Glucodockmeal>
	 */
	public static final Collection<Glucodockmeal> fromJsonArrayToGlucodockmeals(
			final String json) {
		return new JSONDeserializer<List<Glucodockmeal>>()
				.use(null, ArrayList.class).use("values", Glucodockmeal.class)
				.deserialize(json);
	}
}
